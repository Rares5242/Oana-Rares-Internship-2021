using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ex._1_FightingMiniGame
{
    
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(Kata.declareWinner(new Fighter("Lew",10,2),new Fighter("Harry",5,4),"Lew"));
            Console.WriteLine(Kata.declareWinner(new Fighter("Lew", 10, 2), new Fighter("Harry", 5, 4), "Harry"));
            Console.WriteLine(Kata.declareWinner(new Fighter("Harald", 20, 5), new Fighter("Harry", 5, 4), "Harry"));
            Console.WriteLine(Kata.declareWinner(new Fighter("Harald", 20, 5), new Fighter("Harry", 5, 4), "Harald"));
            Console.WriteLine(Kata.declareWinner(new Fighter("Jerry", 30, 3), new Fighter("Harald", 20, 5), "Jerry"));
            Console.WriteLine(Kata.declareWinner(new Fighter("Jerry", 30, 3), new Fighter("Harald", 20, 5), "Harald"));
        }
    }

    public class Fighter
    {
        public string Name;
        public int Health, DamagePerAttack;
        
        public Fighter(string name, int health, int damagePerAttack)
        {
            this.Name = name;
            this.Health = health;
            this.DamagePerAttack = damagePerAttack;
        }
    }

    public class Kata
    {
        public static string declareWinner(Fighter fighter1, Fighter fighter2, string firstAttacker)
        {
            if(firstAttacker != fighter1.Name && firstAttacker != fighter2.Name)
            {
                return "Nume invalid";
            }
            else
            {
                while(true)
                {
                    if(firstAttacker == fighter1.Name)
                    {
                        fighter2.Health -= fighter1.DamagePerAttack;
                        if (fighter2.Health <= 0)
                            return fighter1.Name;
                        fighter1.Health -= fighter2.DamagePerAttack;
                        if (fighter1.Health <= 0)
                            return fighter2.Name;
                    }
                    else if(firstAttacker == fighter2.Name)
                    {
                        fighter1.Health -= fighter2.DamagePerAttack;
                        if (fighter1.Health <= 0)
                            return fighter2.Name;
                        fighter2.Health -= fighter1.DamagePerAttack;
                        if (fighter2.Health <= 0)
                            return fighter1.Name;
                    }
                }
            }
        }
    }
}
